{"version":3,"sources":["Data/PlayerListData.js","Tables/TeamValueTable.js","Tables/PointsOnBenchTable.js","Tables/PointsOnTransfers.js","Tables/PointsTable.js","Data/PageData.js","Components/SiteNavbar/Dropdown.js","Components/SiteNavbar/index.js","PlayerDetail/PlayerDetailTable.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerListData","TeamValueTable","useState","PlayerListDataExample","playerListData","setplayerListData","isLoading","setIsLoading","useEffect","fetch","then","response","json","playerDataFromServer","catch","err","console","log","allOfThePointsScored","allOfTheAverages","numberOfMatchDays","matches","length","numberOfPlayers","y","x","push","Math","floor","team_value","i","slice","reduce","a","b","displayAverages","map","average","GameWeeks","match","gameweek","playerGameWeeks","sort","player","playersWeek","matchweek","renderLogic","indexOf","className","player_name","renderTable","CircularProgress","Table","responsive","PointsOnBenchTable","bench_points","toFixed","totalAverage","week","totalLost","PointsOnTransfers","game_week_transfers_cost","PointsTable","props","dataType","data","tableTitle","title","singlePlayer","averageOfAllTotals","points_total","game_week_points","index","renderTotalLogic","PageData","content","Dropdown","displayedMenus","dropdown_menus","menu","DropdownItem","to","UncontrolledDropdown","DropdownToggle","nav","caret","head_menu","DropdownMenu","inNavbar","SiteNavbar","displayNavs","page","pageLink","split","join","NavItem","playersList","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","PlayerDetailTable","PlayerData","menuHeadings","gameWeeks","game_week_transfers","averageTeamValue","totalTransfers","averageTransfers","totalTransferCosts","averageTransfersCosts","totalBenchPoints","averageBenchPoints","displayAllChips","chips","chip","chip_name","chip_date","chip_matchday","App","displayPages","path","displayPlayerPages","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.317776af.chunk.js","sourcesContent":["const PlayerListData = [\n    {\n        \"player_name\": \"Kach\",\n        \"points_total\": 0,\n        \"transfers_total\": 0,\n        \"current_gameweek\": 0,\n        \"matches\": [\n            {\n                \"player_id\": 0,\n                \"gameweek\": 0,\n                \"game_week_points\": 0,\n                \"points_total\": 0,\n                \"team_value\": 0,\n                \"game_week_transfers\": 0,\n                \"game_week_transfers_cost\": 0,\n                \"bench_points\": 0\n            },\n        ]\n    }\n]\n\nexport default PlayerListData","import React,{useState, useEffect} from 'react'\n// Data\nimport PlayerListDataExample from 'Data/PlayerListData'\n// Components\nimport Table from 'react-bootstrap/Table'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst TeamValueTable = () => {\n\n    const [playerListData, setplayerListData] = useState(PlayerListDataExample)\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        fetch(\"https://kachiis-rest.herokuapp.com/api/fpl_players_refresh\")\n        .then(response => response.json())\n        .then(playerDataFromServer => {\n            setplayerListData(playerDataFromServer)\n            setIsLoading(false)\n        })\n        .catch(err => console.log(err))\n    }, [])\n\n    const allOfThePointsScored = [];\n    const allOfTheAverages = [];\n    const numberOfMatchDays = playerListData[0].matches.length;\n    const numberOfPlayers = playerListData.length;\n    \n    for (let y = 0; y < numberOfMatchDays; y++) {\n        for (let x = 0; x < playerListData.length; x++) {\n            allOfThePointsScored.push(\n                Math.floor(playerListData[x].matches[y].team_value)\n            );\n        }\n    }\n    \n    for (let i = 0; i < allOfThePointsScored.length; i += numberOfPlayers) {\n        allOfTheAverages.push(\n            allOfThePointsScored.slice(i, i + numberOfPlayers)\n            .reduce((a, b) => a + b) /numberOfPlayers\n        )\n    }\n\n    const displayAverages = allOfTheAverages.map((average) => <td>{Math.floor(average)/10}M</td>)\n    \n    const GameWeeks = playerListData[0].matches.map((match) => \n    <th>GW{match.gameweek}</th>)\n\n    const sortedByTeamValue = playerListData.sort((a, b) => {\n        return b.matches[b.matches.length - 1].team_value - a.matches[a.matches.length - 1].team_value\n    })\n\n    const playerGameWeeks = sortedByTeamValue.map((player) => {\n\n        const playersWeek = player.matches.map((matchweek) => {\n\n            const renderLogic = matchweek.team_value > allOfTheAverages[player.matches.indexOf(matchweek)] ?\n            \"good\" : \"bad\"\n\n            return (\n                <td className={`${renderLogic}-week`}>\n                    {Math.floor(matchweek.team_value)/10}\n                </td>\n            )\n        })\n\n        return (\n            <tr>\n                <td className=\"player-rank rank-name\">{playerListData.indexOf(player) + 1}</td>\n                <td className=\"player-name rank-name\">{player.player_name}</td>\n                {playersWeek}\n            </tr>\n        )\n    })\n\n    const renderTable = isLoading ? <CircularProgress /> : (\n        <Table responsive>\n            <tbody>\n                <tr>\n                    <th className=\"player-rank rank-name\">Rank</th>\n                    <th className=\"player-name rank-name\">Players</th>\n                    {GameWeeks}\n                </tr>\n                {playerGameWeeks}\n                <tr>\n                    <td className=\"player-rank rank-name\">-</td>\n                    <td className=\"player-name rank-name\">Average</td>\n                    {displayAverages}\n                </tr>\n            </tbody>\n        </Table>\n    )\n\n    return (\n        <div className=\"table-container\">\n            <h2>Team Value</h2>\n            {renderTable}\n        </div>\n    )\n\n}\n\nexport default TeamValueTable","import React,{useState, useEffect} from 'react'\n// Data\nimport PlayerListDataExample from 'Data/PlayerListData'\n// Components\nimport Table from 'react-bootstrap/Table'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst PointsOnBenchTable = () => {\n\n    const [playerListData, setplayerListData] = useState(PlayerListDataExample)\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        fetch(\"https://kachiis-rest.herokuapp.com/api/fpl_players_refresh\")\n        .then(response => response.json())\n        .then(playerDataFromServer => {\n            setplayerListData(playerDataFromServer)\n            setIsLoading(false)\n        })\n        .catch(err => console.log(err))\n    }, [])\n    \n    const GameWeeks = playerListData[0].matches.map((match) => <th>GW{match.gameweek}</th>)\n    const allOfThePointsScored = [];\n    const allOfTheAverages = [];\n    const numberOfMatchDays = playerListData[0].matches.length;\n    const numberOfPlayers = playerListData.length;\n    \n    for (let y = 0; y < numberOfMatchDays; y++) {\n        for (let x = 0; x < playerListData.length; x++) {\n            allOfThePointsScored.push(\n                Math.floor(playerListData[x].matches[y].bench_points)\n            );\n        }\n    }\n    \n    for (let i = 0; i < allOfThePointsScored.length; i += numberOfPlayers) {\n        allOfTheAverages.push(\n            allOfThePointsScored.slice(i, i + numberOfPlayers)\n            .reduce((a, b) => a + b) /numberOfPlayers\n        )\n    }\n\n    const displayAverages = allOfTheAverages.map(\n        (average) => \n            <td>{average.toFixed(1)}</td>\n    )\n\n    const totalAverage = allOfTheAverages.reduce(\n        (a,b) => a + b\n    )\n\n    const sortedByBenchPointsLost = playerListData.sort(\n        (a, b) => b.matches.map(\n            (week) => week.bench_points).reduce(\n                (a,b) => a + b) - a.matches.map(\n                    (week) => week.bench_points\n                ).reduce(\n                    (a,b) => a + b\n                )\n    )\n\n    const playerGameWeeks = sortedByBenchPointsLost.map((player) => {\n        \n        const playersWeek = player.matches.map((matchweek) => {\n\n            const renderLogic = matchweek.bench_points > allOfTheAverages[player.matches.indexOf(matchweek)] ?\n            \"bad\":\"good\"\n\n            return (\n                <td className={`${renderLogic}-week`}>\n                    {matchweek.bench_points}\n                </td>\n            )\n        })\n\n        const totalLost = player.matches.map((matchweek) =>  matchweek.bench_points).reduce((a,b) => a+b)\n\n        return (\n            <tr>\n                <td className=\"player-rank rank-name\">{playerListData.indexOf(player) + 1}</td>\n                <td className=\"player-name rank-name\">{player.player_name}</td>\n                {playersWeek}\n                <td>{totalLost}</td>\n            </tr>\n        )\n    })\n\n    const renderTable = isLoading ? <CircularProgress /> : (\n        <Table responsive>\n            <tbody>\n                <tr>\n                    <th className=\"player-rank rank-name\">Rank</th>\n                    <th className=\"player-rank rank-name\">Players</th>\n                    {GameWeeks}\n                    <th className=\"player-rank rank-name\">Total</th>\n                </tr>\n                {playerGameWeeks}\n                <tr>\n                    <td className=\"player-rank rank-name\">-</td>\n                    <td className=\"player-name rank-name\">Average</td>\n                    {displayAverages}\n                    <td className=\"player-rank rank-name\">\n                        {totalAverage.toFixed(1)}\n                    </td>\n                </tr>\n            </tbody>\n        </Table>\n\n    )\n\n    return (\n        <div className=\"table-container\">\n            <h2>Points Lost on bench</h2>\n            {renderTable}\n        </div>\n    )\n\n}\n\nexport default PointsOnBenchTable","import React, { useState , useEffect } from 'react'\n// Data\nimport PlayerListDataExample from 'Data/PlayerListData'\n// CSS\nimport CircularProgress from '@material-ui/core/CircularProgress'\n// Components\nimport Table from 'react-bootstrap/Table'\n\nconst PointsOnTransfers = () => {\n\n    const [playerListData, setplayerListData] = useState(PlayerListDataExample)\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        fetch(\"https://kachiis-rest.herokuapp.com/api/fpl_players_refresh\")\n        .then(response => response.json())\n        .then(playerDataFromServer => {\n            setplayerListData(playerDataFromServer)\n            setIsLoading(false)\n        })\n        .catch(err => console.log(err))\n    }, [])\n    \n    const GameWeeks = playerListData[0].matches.map((match) => <th>GW{match.gameweek}</th>)\n\n    const sortTeamsByTransferPoints = playerListData.sort((a, b) => \n        b.matches.map((week) => week.game_week_transfers_cost).reduce(\n        (a,b) => a + b) - a.matches.map((week) => week.game_week_transfers_cost).reduce((a,b) => a + b)\n    )\n\n    const playerGameWeeks = sortTeamsByTransferPoints.map((player) => {\n\n        const playersWeek = player.matches.map((matchweek) => {\n\n            const renderLogic = ( matchweek.game_week_transfers_cost > 0 ? \n                    (matchweek.game_week_transfers_cost === 4 ? \"yellow\": \"red\"): \"none\" \n                )\n\n            return (\n                <td className={`transfer-${renderLogic}`}>\n                    {matchweek.game_week_transfers_cost}\n                </td>\n            )\n        })\n\n        const totalLost = player.matches.map((matchweek) =>  matchweek.game_week_transfers_cost).reduce((a,b) => a+b)\n\n        return (\n            <tr>\n                <td className=\"player-rank rank-name\">{playerListData.indexOf(player) + 1}</td>\n                <td className=\"player-name rank-name\">{player.player_name}</td>\n                {playersWeek}\n                <td>{totalLost}</td>\n            </tr>\n        )\n    })\n\n    const renderTable = isLoading ? <CircularProgress /> : (\n        <Table responsive>\n            <tbody>\n                <tr>\n                    <th className=\"player-rank rank-name\">Rank</th>\n                    <th className=\"player-name rank-name\">Players</th>\n                    {GameWeeks}\n                    <th>Total</th>\n                </tr>\n                {playerGameWeeks}\n            </tbody>\n        </Table>\n    )\n\n    return (\n        <div className=\"table-container\">\n            <h2>Points Spent on Transfers</h2>\n            {renderTable}\n        </div>\n    )\n\n}\n\nexport default PointsOnTransfers","import React,{useState, useEffect} from 'react'\n// Data\nimport PlayerListDataExample from 'Data/PlayerListData'\n// Components\nimport Table from 'react-bootstrap/Table'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst PointsTable = (props) => {\n\n    const dataType = props.data\n    const tableTitle = props.title\n\n    const [playerListData, setplayerListData] = useState(PlayerListDataExample)\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        fetch(\"https://kachiis-rest.herokuapp.com/api/fpl_players_refresh\")\n        .then(response => response.json())\n        .then(playerDataFromServer => {\n            setplayerListData(playerDataFromServer)\n            setIsLoading(false)\n        })\n        .catch(err => console.log(err))\n    },[])\n    \n    const singlePlayer = playerListData[0]\n    \n    const GameWeeks = singlePlayer.matches.map(\n        (match) => <th>GW{match.gameweek}</th>\n    )\n\n    const numberOfMatchDays = singlePlayer.matches.length;\n    const numberOfPlayers = playerListData.length;\n    const averageOfAllTotals = playerListData.map(\n        (player) => player.points_total).reduce((a, b) => a + b) / numberOfPlayers\n\n    const allOfThePointsScored = [];\n    const allOfTheAverages = [];\n    \n    for (let y=0; y < numberOfMatchDays; y++) {\n        for (let x=0; x < playerListData.length; x++) {\n            if (dataType === \"points_total\" ) {\n                allOfThePointsScored.push(playerListData[x].matches[y].points_total);\n            } else {\n                allOfThePointsScored.push(playerListData[x].matches[y].game_week_points);\n            }\n        }\n    }\n    \n    for (let i=0; i < allOfThePointsScored.length; i += numberOfPlayers) {\n        allOfTheAverages.push(\n            allOfThePointsScored.slice(i, i + numberOfPlayers)\n            .reduce((a, b) => a + b) /numberOfPlayers\n        )\n    } \n        \n    const playerGameWeeks = playerListData.map((player, index) => {\n        \n        const playersWeek = player.matches.map((matchweek, index) => {\n            \n            const renderType = dataType === \"points_total\" ? \n                matchweek.points_total : \n                matchweek.game_week_points\n                \n            const renderLogic = renderType >= allOfTheAverages[player.matches.indexOf(matchweek)] ? \n            \"good\" : \n            \"bad\"\n            \n            return (\n                <td className={`${renderLogic}-week`} key={index}>\n                    {dataType === \"points_total\" ? \n                        matchweek.points_total : \n                        matchweek.game_week_points\n                    }\n                </td>\n            )\n        })\n\n        const renderTotalLogic = player.points_total > averageOfAllTotals ? \"good\": \"bad\"\n        \n        return (\n            <tr key={index}>\n                <td className=\"player-rank rank-name\">{playerListData.indexOf(player) + 1}</td>\n                <td className=\"player-name rank-name\">{player.player_name}</td>\n                {playersWeek}\n                { dataType === \"points_total\" ?\n                    <></>:\n                    <td className={`${renderTotalLogic}-week`}>\n                        {player.points_total}\n                    </td>\n                }\n            </tr>\n        )\n    })\n    \n    const displayAverages = allOfTheAverages.map(\n        (average, index) => <td key={index}>{average.toFixed(1)}</td>\n    )\n\n    const renderTable = isLoading ? (\n            <CircularProgress />\n        ) : (\n        <>\n            <h2>{tableTitle}</h2>\n            <Table responsive>\n                <tbody>\n                    <tr>\n                        <th className=\"player-rank rank-name\">Rank</th>\n                        <th className=\"player-name rank-name\">Players</th>\n                        \n                        {GameWeeks}\n                        { dataType === \"points_total\" ?\n                            <></>:\n                            <th>Total</th>\n                        }\n                    </tr>\n                    {playerGameWeeks}\n                    <tr>\n                        <td className=\"player-rank rank-name\">-</td>\n                        <td className=\"player-name rank-name\">Average</td>\n                        {displayAverages}\n                        { dataType === \"points_total\" ?\n                            <></>:\n                            <td>{averageOfAllTotals.toFixed(1)}</td>\n                        }\n                    </tr>\n                </tbody>\n            </Table>\n        </>\n\n    )\n    \n    return (\n        <div className=\"table-container\">\n            {renderTable}\n        </div>\n    )\n\n}\n\nexport default PointsTable","import React from 'react'\n// Data\n// Tables\nimport TeamValueTable from 'Tables/TeamValueTable'\nimport PointsOnBenchTable from 'Tables/PointsOnBenchTable'\nimport PointsOnTransfers from 'Tables/PointsOnTransfers'\nimport PointsTable from 'Tables/PointsTable'\n\n\nconst PageData = [\n    {\n        title: \"Weekly Totals\",\n        content: <PointsTable data=\"points_total\" title=\"Weekly Totals\"/>\n    },\n    {\n        title: \"team value\",\n        content: <TeamValueTable />\n    },\n    {\n        title: \"bench points\",\n        content: <PointsOnBenchTable />\n    },\n    {\n        title: \"points on transfers\",\n        content: <PointsOnTransfers />\n    }\n]\n\n\nexport default PageData","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\n\nconst Dropdown = (props) => {\n\n    const Menus = props.dropdown_menus\n\n    const displayedMenus = Menus.map((menu, index) => (\n        <DropdownItem className=\"nav-dropdown-menu-link\" key={index}>\n            <Link to={`/player/${menu}`} className=\"nav-dropdown-menu-link\">\n                {menu}\n            </Link>\n        </DropdownItem>\n    ))\n\n    return (\n        <UncontrolledDropdown>\n            <DropdownToggle nav caret className=\"nav-links\">\n                {props.head_menu}\n            </DropdownToggle>\n            <DropdownMenu inNavbar nav className=\"nav-dropdown-menu\">\n                {displayedMenus}\n            </DropdownMenu>\n        </UncontrolledDropdown>\n    )\n}\n\nexport default Dropdown","import React, { useState, useEffect } from 'react';\nimport { \n    Collapse, \n    Navbar, \n    NavbarToggler, \n    NavbarBrand, \n    Nav, \n    NavItem\n} from 'reactstrap'\nimport PageData from 'Data/PageData';\nimport Dropdown from './Dropdown';\nimport './navbar.css'\nimport {Link} from 'react-router-dom'\nimport PlayerListData from 'Data/PlayerListData';\n\nconst SiteNavbar = (props) => {\n\n    const [playerListData, setplayerListData] = useState(PlayerListData)\n\n    const displayNavs = PageData.map((page, index) => {\n\n        const pageLink = page.title.split(\" \").join(\"-\")\n\n        return (\n            <NavItem key={index}>\n                <Link to={`/fpl_app/${pageLink}`} className=\"nav-links\">\n                    {page.title}\n                </Link>\n            </NavItem>\n        )\n    })\n\n    useEffect(() => {\n        fetch(\"https://kachiis-rest.herokuapp.com/api/fpl_players_refresh\")\n        .then(response => response.json())\n        .then(playerDataFromServer => {\n            setplayerListData(playerDataFromServer)\n        })\n        .catch(err => console.log(err))\n    }, [])\n    \n    const playersList = playerListData.map((player) => player.player_name)\n    \n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n    \n    return (\n        <Navbar color=\"dark\" dark expand=\"md\" className=\"nav-background\">\n            <NavbarBrand href=\"/fpl_app\">Fantasy Premier League Stats</NavbarBrand>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"mr-auto\" navbar>\n                    {displayNavs}\n                </Nav>\n                <Dropdown head_menu=\"players\" dropdown_menus={playersList}/>\n            </Collapse>\n        </Navbar>\n    );\n}\n\nexport default SiteNavbar;","import React from 'react'\nimport Table from 'react-bootstrap/Table'\n\nconst PlayerDetailTable = (props) => {\n\n    const PlayerData = props.data\n\n    const playerMenus = [\n        \"GW\",\n        \"GW Points\",\n        \"Total\",\n        \"Team value\",\n        \"Transfers\",\n        \"Transfer Cost\",\n        \"Bench Points\",\n    ]\n\n    const menuHeadings = playerMenus.map((menu) => <th>{menu}</th>)\n\n    const gameWeeks = PlayerData.matches.map((week) => {\n\n        return (\n            <tr>\n                <td>{week.gameweek}</td>\n                <td>{week.game_week_points}</td>\n                <td>{week.points_total}</td>\n                <td>£{week.team_value / 10}M</td>\n                <td>{week.game_week_transfers}</td>\n                <td>{week.game_week_transfers_cost}</td>\n                <td>{week.bench_points}</td>\n            </tr>\n        )\n    })\n\n\n\n    const averageTeamValue = (PlayerData.matches.map(\n        player => player.team_value /10\n        ).reduce(\n            (a,b) => a + b\n        ) / PlayerData.matches.length\n    ).toFixed(2)\n\n    // Transfers\n    \n    const totalTransfers = (PlayerData.matches.map(\n        player => player.game_week_transfers\n        ).reduce(\n            (a,b) => a + b\n        )\n    )\n\n    const averageTransfers = (totalTransfers / PlayerData.matches.length).toFixed(1)\n\n    // Transfer Costs\n    const totalTransferCosts = (PlayerData.matches.map(\n        player => player.game_week_transfers_cost\n        ).reduce(\n            (a,b) => a + b\n        )\n    )\n\n    const averageTransfersCosts = (totalTransferCosts / PlayerData.matches.length).toFixed(1)\n\n    // Bench Points\n\n    const totalBenchPoints = (PlayerData.matches.map(\n        player => player.bench_points\n        ).reduce(\n            (a,b) => a + b\n        )\n    )\n\n    const averageBenchPoints = (totalBenchPoints / PlayerData.matches.length).toFixed(2)\n\n    // Chips Played \n\n    const displayAllChips = PlayerData.chips.map((chip, index) => {\n\n        return (\n            <tr key={index}>\n                <td>{chip.chip_name}</td>\n                <td>{chip.chip_date}</td>\n                <td>{chip.chip_matchday}</td>\n            </tr>\n        )\n    })\n\n    return (\n        <>\n        <div className=\"table-container\">\n            <h1>{PlayerData.player_name}</h1>\n            <Table responsive>\n                <tbody>\n                    <tr>\n                        {menuHeadings}\n                    </tr>\n                    {gameWeeks}\n                    <tr>\n                        <td>Averages | Totals</td>\n                        <td>{(PlayerData.points_total/PlayerData.matches.length).toFixed(1)}</td>\n                        <td>{PlayerData.points_total}</td>\n                        <td>£{averageTeamValue}M</td>\n                        <td>\n                            <b>AVG:</b> {averageTransfers} | <b>TOTAL:</b> {totalTransfers}\n                        </td>\n                        <td>\n                            <b>AVG:</b> {averageTransfersCosts} | <b>TOTAL:</b> {totalTransferCosts} \n                        </td>\n                        <td>\n                            <b>AVG:</b> {averageBenchPoints} | <b>TOTAL:</b> {totalBenchPoints} \n                        </td>\n                    </tr>\n                </tbody>\n            </Table>\n        </div>\n        <div className=\"second-table-container\">\n            <h1>Chips Played</h1>\n            <Table responsive>\n                <tbody>\n                    <tr>\n                        <th>Game Week</th>\n                        <th>Chip Played</th>\n                        <th>Date</th>\n                    </tr>\n                    {displayAllChips}\n                </tbody>\n            </Table>\n        </div>\n        </>\n    )\n\n}\n\nexport default PlayerDetailTable","import React, { useEffect, useState } from 'react'\n// CSS\nimport './App.css';\nimport './table.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'antd/dist/antd.css';\n// Components\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport SiteNavbar from './Components/SiteNavbar'\nimport PointsTable from './Tables/PointsTable';\n// Data\nimport PageData from 'Data/PageData';\nimport PlayerListData from 'Data/PlayerListData'\nimport PlayerDetailTable from './PlayerDetail/PlayerDetailTable';\n\n\nconst App = () => {\n\n  const [playerListData, setplayerListData] = useState(PlayerListData)\n\n  useEffect(() => {\n    fetch(\"https://kachiis-rest.herokuapp.com/api/fpl_players/\")\n    .then(response => response.json())\n    .then(playerDataFromServer => {\n          setplayerListData(playerDataFromServer)\n        })\n        .catch(err => console.log(err))\n    },[])\n  \n  const displayPages = PageData.map((page, index) => {\n    const pageLink = page.title.split(\" \").join(\"-\")\n    return (\n      <Route path={`/fpl_app/${pageLink}`} key={index}>\n        {page.content}\n      </Route>\n    )\n  })\n\n  const displayPlayerPages = playerListData.map((player, index) => (\n      <Route path={`/player/${player.player_name}`} key={index}>\n        <PlayerDetailTable data={player}/>\n      </Route>\n  ))\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <SiteNavbar />\n        <main>\n          <Switch>\n            {displayPages}\n            {displayPlayerPages}\n            <Route path=\"/fpl_app\">\n              <PointsTable title=\"Weekly Points\"/>\n            </Route>\n          </Switch>\n        </main>\n      </BrowserRouter>\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}